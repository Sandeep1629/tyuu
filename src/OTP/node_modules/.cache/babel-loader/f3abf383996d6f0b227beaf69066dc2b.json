{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91879\\\\Desktop\\\\react-otp-master\\\\src\\\\App.js\";\nimport React from 'react';\nimport firebase from './firebase';\nimport { getAuth, RecaptchaVerifier } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.configureCaptcha = () => {\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n        'size': 'invisible',\n        'callback': response => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n          this.onSignInSubmit();\n          console.log(\"Recaptca varified\");\n        },\n        defaultCountry: \"IN\"\n      });\n    };\n    this.onSignInSubmit = e => {\n      e.preventDefault();\n      this.configureCaptcha();\n      const phoneNumber = \"+91\" + this.state.mobile;\n      console.log(phoneNumber);\n      const appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        console.log(\"OTP has been sent\");\n        // ...\n      }).catch(error => {\n        // Error; SMS not sent\n        // ...\n        console.log(\"SMS not sent\");\n      });\n    };\n    this.onSubmitOTP = e => {\n      e.preventDefault();\n      const code = this.state.otp;\n      console.log(code);\n      window.confirmationResult.confirm(code).then(result => {\n        // User signed in successfully.\n        const user = result.user;\n        console.log(JSON.stringify(user));\n        alert(\"User is verified\");\n        // ...\n      }).catch(error => {\n        // User couldn't sign in (bad verification code?)\n        // ...\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSignInSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"sign-in-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"mobile\",\n          placeholder: \"Mobile number\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitOTP,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"otp\",\n          placeholder: \"OTP Number\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","firebase","getAuth","RecaptchaVerifier","App","Component","handleChange","e","name","value","target","setState","configureCaptcha","window","recaptchaVerifier","auth","response","onSignInSubmit","console","log","defaultCountry","preventDefault","phoneNumber","state","mobile","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","onSubmitOTP","code","otp","confirm","result","user","JSON","stringify","alert","render"],"sources":["C:/Users/91879/Desktop/react-otp-master/src/App.js"],"sourcesContent":["import React from 'react'\nimport firebase from './firebase'\nimport { getAuth, RecaptchaVerifier } from \"firebase/auth\";\n\nclass App extends React.Component {\n  handleChange = (e) =>{\n    const {name, value } = e.target\n    this.setState({\n        [name]: value\n      })\n  }\n  configureCaptcha = () =>{\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      'size': 'invisible',\n      'callback': (response) => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        this.onSignInSubmit();\n        console.log(\"Recaptca varified\")\n      },\n      defaultCountry: \"IN\"\n    });\n  }\n  onSignInSubmit = (e) => {\n    e.preventDefault()\n    this.configureCaptcha()\n    const phoneNumber = \"+91\" + this.state.mobile\n    console.log(phoneNumber)\n    const appVerifier = window.recaptchaVerifier;\n    firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then((confirmationResult) => {\n          // SMS sent. Prompt user to type the code from the message, then sign the\n          // user in with confirmationResult.confirm(code).\n          window.confirmationResult = confirmationResult;\n          console.log(\"OTP has been sent\")\n          // ...\n        }).catch((error) => {\n          // Error; SMS not sent\n          // ...\n          console.log(\"SMS not sent\")\n        });\n  }\n  onSubmitOTP = (e) =>{\n    e.preventDefault()\n    const code = this.state.otp\n    console.log(code)\n    window.confirmationResult.confirm(code).then((result) => {\n      // User signed in successfully.\n      const user = result.user;\n      console.log(JSON.stringify(user))\n      alert(\"User is verified\")\n      // ...\n    }).catch((error) => {\n      // User couldn't sign in (bad verification code?)\n      // ...\n    });\n    \n  }\n  render() {\n    return (\n      <div>\n        <h2>Login Form</h2>\n        <form onSubmit={this.onSignInSubmit}>\n          <div id=\"sign-in-button\"></div>\n          <input type=\"number\" name=\"mobile\" placeholder=\"Mobile number\" required onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n\n        <h2>Enter OTP</h2>\n        <form onSubmit={this.onSubmitOTP}>\n          <input type=\"number\" name=\"otp\" placeholder=\"OTP Number\" required onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\nexport default App\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,EAAEC,iBAAiB,QAAQ,eAAe;AAAC;AAE3D,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAAA;IAAA;IAAA,KAChCC,YAAY,GAAIC,CAAC,IAAI;MACnB,MAAM;QAACC,IAAI;QAAEC;MAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;MAC/B,IAAI,CAACC,QAAQ,CAAC;QACV,CAACH,IAAI,GAAGC;MACV,CAAC,CAAC;IACN,CAAC;IAAA,KACDG,gBAAgB,GAAG,MAAK;MACtBC,MAAM,CAACC,iBAAiB,GAAG,IAAIb,QAAQ,CAACc,IAAI,CAACZ,iBAAiB,CAAC,gBAAgB,EAAE;QAC/E,MAAM,EAAE,WAAW;QACnB,UAAU,EAAGa,QAAQ,IAAK;UACxB;UACA,IAAI,CAACC,cAAc,EAAE;UACrBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAClC,CAAC;QACDC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ,CAAC;IAAA,KACDH,cAAc,GAAIV,CAAC,IAAK;MACtBA,CAAC,CAACc,cAAc,EAAE;MAClB,IAAI,CAACT,gBAAgB,EAAE;MACvB,MAAMU,WAAW,GAAG,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM;MAC7CN,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;MACxB,MAAMG,WAAW,GAAGZ,MAAM,CAACC,iBAAiB;MAC5Cb,QAAQ,CAACc,IAAI,EAAE,CAACW,qBAAqB,CAACJ,WAAW,EAAEG,WAAW,CAAC,CAC1DE,IAAI,CAAEC,kBAAkB,IAAK;QAC5B;QACA;QACAf,MAAM,CAACe,kBAAkB,GAAGA,kBAAkB;QAC9CV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC;MACF,CAAC,CAAC,CAACU,KAAK,CAAEC,KAAK,IAAK;QAClB;QACA;QACAZ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAC,CAAC;IACR,CAAC;IAAA,KACDY,WAAW,GAAIxB,CAAC,IAAI;MAClBA,CAAC,CAACc,cAAc,EAAE;MAClB,MAAMW,IAAI,GAAG,IAAI,CAACT,KAAK,CAACU,GAAG;MAC3Bf,OAAO,CAACC,GAAG,CAACa,IAAI,CAAC;MACjBnB,MAAM,CAACe,kBAAkB,CAACM,OAAO,CAACF,IAAI,CAAC,CAACL,IAAI,CAAEQ,MAAM,IAAK;QACvD;QACA,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;QACxBlB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;QACjCG,KAAK,CAAC,kBAAkB,CAAC;QACzB;MACF,CAAC,CAAC,CAACV,KAAK,CAAEC,KAAK,IAAK;QAClB;QACA;MAAA,CACD,CAAC;IAEJ,CAAC;EAAA;EACDU,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAM,QAAQ,EAAE,IAAI,CAACvB,cAAe;QAAA,wBAClC;UAAK,EAAE,EAAC;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAO,eAC/B;UAAO,IAAI,EAAC,QAAQ;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,eAAe;UAAC,QAAQ;UAAC,QAAQ,EAAE,IAAI,CAACX;QAAa;UAAA;UAAA;UAAA;QAAA,QAAE,eACtG;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QAChC,eAEP;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB;QAAM,QAAQ,EAAE,IAAI,CAACyB,WAAY;QAAA,wBAC/B;UAAO,IAAI,EAAC,QAAQ;UAAC,IAAI,EAAC,KAAK;UAAC,WAAW,EAAC,YAAY;UAAC,QAAQ;UAAC,QAAQ,EAAE,IAAI,CAACzB;QAAa;UAAA;UAAA;UAAA;QAAA,QAAE,eAChG;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEV;AACF;AACA,eAAeF,GAAG"},"metadata":{},"sourceType":"module"}